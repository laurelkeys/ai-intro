FUNCTION_BLOCK alignment

VAR_INPUT
        dist : REAL; // distance (% of perception radius)
        hDiff : REAL; // heading difference (in degrees)
        sDiff : REAL; // speed difference (% of max speed)
END_VAR

VAR_OUTPUT
        hChg : REAL; // heading change (in degrees)
        sChg : REAL; // speed change (% of max speed)
END_VAR

FUZZIFY dist
        TERM close := (0, 1) (100, 0);
        TERM far := (0, 0) (100, 1);
END_FUZZIFY

FUZZIFY hDiff
        TERM left := (-180, 1) (0, 0);
        TERM none := (-180, 0) (0, 1) (180, 0);
        TERM right := (0, 0) (180, 1);
END_FUZZIFY

FUZZIFY sDiff
        TERM slower := (-100, 1) (0, 0);
        TERM none := (-100, 0) (0, 1) (100, 0);
        TERM faster := (0, 0) (100, 1);
END_FUZZIFY

DEFUZZIFY hChg
        TERM left := (-360, 0) (-180, 1) (0, 0);
        TERM none := (-180, 0) (0, 1) (180, 0);
        TERM right := (0, 0) (180, 1) (360, 0);
        METHOD : COG; // LM, RM, MM
        DEFAULT := 0;
        RANGE := (-360 .. 360); // TODO: check if (-180 .. 180) changes results
END_DEFUZZIFY

DEFUZZIFY sChg
        TERM slower := (-200, 0) (-100, 1) (0, 0);
        TERM none := (-100, 0) (0, 1) (100, 0);
        TERM faster := (0, 0) (100, 1) (200, 0);
        METHOD : COG; // LM, RM, MM
        DEFAULT := 0;
        RANGE := (-200 .. 200); // TODO: check if (-100 .. 100) changes results
END_DEFUZZIFY

RULEBLOCK alignment
        ACT : MIN;
        ACCU : MAX;
        AND : PROD; // MIN
		OR : MAX;
        RULE 1 : IF (hDiff IS none) THEN hChg IS none;
        RULE 2 : IF (sDiff IS none) THEN sChg IS none;
        RULE 3 : IF (dist IS far) AND (hDiff IS right) THEN hChg IS none;
        RULE 4 : IF (dist IS close) AND (hDiff IS right) THEN hChg IS right;
        RULE 5 : IF (dist IS far) AND (hDiff IS left) THEN hChg IS none;
        RULE 6 : IF (dist IS close) AND (hDiff IS left) THEN hChg IS left;
        RULE 7 : IF (dist IS far) AND (sDiff IS slower) THEN sChg IS none;
        RULE 8 : IF (dist IS close) AND (sDiff IS slower) THEN sChg IS slower;
        RULE 9 : IF (dist IS far) AND (sDiff IS faster) THEN sChg IS faster;
        RULE 10 : IF (dist IS close) AND (sDiff IS faster) THEN sChg IS faster;
END_RULEBLOCK

END_FUNCTION_BLOCK